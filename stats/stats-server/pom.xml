<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ru.practicum</groupId>
        <artifactId>explore-with-me</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>stats-server</artifactId>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
    </properties>

    <dependencies>

        <!--
            Стартер для Spring Data JPA. Подключает Hibernate и базовые инструменты Spring для работы
            с базами данных с помощью JPA (репозитории, транзакции и т.д.).
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--
            Стартер Actuator, который добавляет метрики и эндпоинты мониторинга приложения
            (health-check, метрики, логи, info и др.).
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--
            Стартер Web — базовый модуль для создания веб-приложений (REST-контроллеры,
            встроенный сервер, автонастройка Spring MVC, и т.д.).
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--
            Lombok — библиотека, позволяющая сократить шаблонный код (геттеры, сеттеры, конструкторы и т.п.)
            при компиляции. Помечена как optional, чтобы не попадать в итоговую сборку.
        -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--
            Драйвер PostgreSQL. Нужен для подключения к серверу PostgreSQL.
            Предполагает, что JPA/Hibernate будет использовать этот драйвер для работы с БД.
        -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!--
            Собственная (или учебная) библиотека DTO-моделей (Data Transfer Objects) для сервиса статистики (stats).
            Используется для передачи данных между сервисами или модулями.
        -->
        <dependency>
            <groupId>ru.practicum</groupId>
            <artifactId>stats-dto</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!-- MapStruct Dependencies -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            Стартер AOP (Aspect Oriented Programming). Позволяет писать аспекты для логирования, мониторинга,
            кэширования или других сквозных задач (cross-cutting concerns).
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!-- Spring Cloud Config для загрузки внешней конфигурации -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!-- Spring Retry для автоматических повторов -->
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>

        <!-- Для реализации Circuit Breaker с помощью Resilience4j -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
        </dependency>

        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot3</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
        </dependency>
        <dependency>
            <groupId>ru.practicum</groupId>
            <artifactId>stats-client</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>