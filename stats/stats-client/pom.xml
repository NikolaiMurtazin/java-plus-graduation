<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ru.practicum</groupId>
        <artifactId>explore-with-me</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>stats-client</artifactId>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>ru.practicum</groupId>
            <artifactId>stats-dto</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--
            Spring Boot Starter — базовая зависимость для Spring Boot-приложения.
            Включает минимальный набор компонентов (Spring Context, AutoConfiguration и др.),
            необходимых для запуска приложения.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--
            Spring Cloud OpenFeign — стартер для поддержки декларативного REST-клиента Feign.
            Позволяет создавать HTTP-запросы к внешним сервисам через простые интерфейсы
            с аннотациями (например, @FeignClient, @RequestMapping).
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!--
            Lombok — библиотека для сокращения шаблонного кода (геттеры, сеттеры, конструкторы и др.).
            Помечена как provided, что означает: Lombok используется только во время компиляции и
            не включается в финальный рантайм-артефакт.
        -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--
            Spring Boot Starter Validation — стартер для валидации данных.
            Включает поддержку аннотаций валидации, таких как @NotNull, @Size, @Valid и др.
            Используется в контроллерах и сервисах для проверки входных и выходных данных.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Для реализации Circuit Breaker с помощью Resilience4j -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
        </dependency>

        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot3</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
        </dependency>

    </dependencies>

</project>